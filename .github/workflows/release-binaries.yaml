name: Release Binaries

on:
  workflow_dispatch:
    inputs:
      triple_target:
        description: 'rust cargo triple target for pyoxidizer'
        required: true
        type: choice
        options:
        - "x86_64-unknown-linux-gnu"
        - "aarch64-unknown-linux-gnu"

      binary_name:
        description: 'output binary name'
        required: false
        type: string
        default: "minilayer"

      runner:
        description: 'runner name'
        required: false
        type: string
        default: "ubuntu-latest"


  workflow_call:
    inputs:
      triple_target:
        description: 'rust cargo triple target for pyoxidizer'
        required: true
        type: string
  
  
      binary_name:
        description: 'output binary name'
        required: false
        type: string
        default: "minilayer"
        
  
      runner:
        description: 'runner name'
        required: false
        type: string
        default: "ubuntu-latest"
        
permissions:
  contents: write
  discussions: write


jobs:
  release-publish:
    env:
      binary_name: minilayer
    runs-on: ${{ inputs.runner }}  # assume python3 exists

    steps:
      - name: install latest git
        # IMPORTANT: installation of latest git is needed for old runners (ubuntu18.04) to have a .git folder after the usage of actions/checkout@v3
        # https://github.com/actions/checkout/issues/335
        run: |
          sudo apt-get install -y software-properties-common \
          && sudo apt-get update \
          && sudo add-apt-repository -y ppa:git-core/ppa \
          && sudo apt-get update \
          && sudo apt-get install -y git
          

      - uses: actions/checkout@v3
        with:
          # IMPORTANT: a positive fetch-depth value is needed in order to ensure a .git folder under old ubuntu18.04 runners. 
          # A valid .git folder is required for setuptools-scm to resolve python package versions
          fetch-depth: 0

      - name: Build Python Package
        # IMPORTANT: the ambigiuse setup_python action does not provide support for ARM runners
        # A valid .git folder is required for setuptools-scm to resolve python package versions
        run: |
          git status
          
          sudo apt-get update -y
          sudo apt-get install -y git 
          sudo apt-get install -y python3-packaging
          sudo apt-get install -y python3-dev python3-venv python3-pip
          python3 -m pip install pip==21.3.1 
          python3 -m pip install --upgrade build setuptools wheel  setuptools-scm packaging
          export SETUPTOOLS_SCM_DEBUG=1
          python3 -m build --wheel
  
      - name: Build Binary using Pyoxidizer
        id: run_pyoxidizer
  
        run: |
          sudo apt-get install -y build-essential
          python3 -m pip install pyoxidizer
  
          oxidizer_location=$GITHUB_WORKSPACE
          wheel_location=./dist/$(ls dist | grep .whl)
          target_triple=${{ inputs.triple_target }}
          binary_name=${{ inputs.binary_name }} 
          run_command="from minilayer.__main__ import main; main()"
          python_version="3.10"
  
          pyoxidizer build exe \
            --path $oxidizer_location \
            --release \
            --var wheel_location $wheel_location \
            --var run_command "$run_command" \
            --var python_version $python_version \
            --var app_name $binary_name \
            --target-triple $target_triple 
  
          pyoxidizer analyze "$oxidizer_location/build/$target_triple/release/exe/$binary_name"
          
          strip $oxidizer_location/build/$target_triple/release/exe/$binary_name
          
          ( cd $oxidizer_location/build/$target_triple/release/exe && tar -zcvf $GITHUB_WORKSPACE/build/$binary_name-$target_triple.tgz "$binary_name" )
  
          echo "binary_location=$GITHUB_WORKSPACE/build/$binary_name-$target_triple.tgz" >> "$GITHUB_OUTPUT"
  
      - name: Create GH Release
        uses: softprops/action-gh-release@v0.1.15
        with:
            files: |
              ${{ steps.run_pyoxidizer.outputs.binary_location }}
  